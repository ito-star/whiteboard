{
  "rules": {
    // By default, all client access is denied. Only the Admin SDK will be able to access anything.
    ".read": false,
    ".write": false,
    "blocks": {
      "$board_id": {
        // Blocks are readable by every member of the Board, but are only writable by their creator.
        // Grid properties are the exception, they are writable by every board member.
        ".read": "auth !== null && ((root.child('whiteboards').child($board_id).child('unique_url').exists() && root.child('readonly-access').child(auth.uid).child('boards').child($board_id).exists()) || root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists())",
        ".indexOn": ["created_by", "title", "type"],
        "$block_id": {
          ".write": "(root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()) && ((data.exists() && !newData.exists()) ? root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).child('board_members').child('0').val() === auth.token.email.replace('.', '<>') || data.child('created_by').val() === auth.token.email.replace('.', '<>') : ((!data.exists() && newData.exists()) ? newData.child('created_by').val() === auth.token.email.replace('.', '<>') : ((data.exists() && newData.exists()) ? data.child('created_by').val() === auth.token.email.replace('.', '<>') : true)))",
          ".validate": "(!data.exists() && newData.exists()) ? newData.hasChildren(['id', 'board_id', 'created_by', 'date_created', 'type', 'title']) : true",
          "id": {
            ".validate": "newData.isString() && newData.val() === $block_id"
          },
          "board_id": {
            ".validate": "newData.isString() && newData.val() === $board_id"
          },
          "conversation": {},
          "static": {
            ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
            ".validate": "newData.isBoolean()"
          },
          "created_by": {
            ".validate": "newData.isString() && (!data.exists() ? newData.val() === auth.token.email.replace('.', '<>') : newData.val() === data.val())"
          },
          "date_created": {
            ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
          },
          "video_id": {
            ".validate": "newData.isString()"
          },
          "rss_url": {
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "sheet_url": {
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "webhookURL":{
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "iframe_url": {
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "isPrivateTextBlock": {
            ".validate": "newData.isBoolean()"
          },
          "isTransparentTextBlock": {
            ".validate": "newData.isBoolean()"
          },
          "useIframely": {
            ".validate": "newData.isBoolean()"
          },
          "useWebhook": {
            ".validate": "newData.isBoolean()"
          },
          "useQAWebhook": {
            ".validate": "newData.isBoolean()"
          },
          "useButtonWebhook": {
            ".validate": "newData.isBoolean()"
          },
          "powerpoint_url": {
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "pdf_path": {
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "image_path": {
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "imageLink": {
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "checked": {},
          "data": {},
          "qa_data": {
            "$qa_idx": {
              "id": {
                ".write": "newData.val() === data.val() || root.child('blocks').child($board_id).child($block_id).child('created_by').val() === auth.token.email.replace('.', '<>')",
                ".validate": "newData.isString()"
              },
              "question": {
                ".write": "newData.val() === data.val() || root.child('blocks').child($board_id).child($block_id).child('created_by').val() === auth.token.email.replace('.', '<>')",
                ".validate": "newData.isString()"
              },
              "answer": {
                ".write": "(root.child('whiteboards').child($board_id).child('unique_url').exists() && root.child('readonly-access').child(auth.uid).child('boards').child($board_id).exists()) || root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
                ".validate": "newData.isString()"
              }
            }
          },
          "files": {
            "$file_idx": {
              "createdBy": {
                ".validate": "newData.isString()"
              },
              "fileName": {
                ".validate": "newData.isString()"
              },
              "filePath": {
                // URL Format
                // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
                ".validate": "newData.isString() && (newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
              },
              "fileSize": {
                ".validate": "newData.isNumber()"
              },
              "fileType": {
                ".validate": "newData.isString()"
              },
              "storagePath": {
                ".validate": "newData.isString()"
              },
              "uploadDate": {
                  // ISO-8601 Format
                  /* See https://devdocs.io/javascript/global_objects/date/toisostring */
                  ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
              }
            }
          },
          "gridFiles": {
            "$file_idx": {
              "createdBy": {
                ".validate": "newData.isString()"
              },
              "fileName": {
                ".validate": "newData.isString()"
              },
              "filePath": {
                // URL Format
                // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
                ".validate": "newData.isString() && (newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
              },
              "fileSize": {
                ".validate": "newData.isNumber()"
              },
              "fileType": {
                ".validate": "newData.isString()"
              },
              "storagePath": {
                ".validate": "newData.isString()"
              },
              "uploadDate": {
                  // ISO-8601 Format
                  /* See https://devdocs.io/javascript/global_objects/date/toisostring */
                  ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
              }
            }
          },
          "buttons": {
            "$button_idx": {
              "id": {
                ".validate": "newData.isString()"
              },
              "type": {
                ".validate": "newData.isString() && newData.val().matches(/^Custom|Twitter|Facebook|Youtube|LinkedIn$/)"
              },
              "color": {
                ".validate": "newData.isString()"
              },
              "backgroundColor": {
                ".validate": "newData.isString()"
              },
              "text": {
                ".validate": "newData.isString()"
              },
              "url": {
                // URL Format
                // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
                ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i) || newData.val().matches(/^(mailto|tel|callto|cid|xmpp):/i))"
              }
            }
          },
          "imageFiles": {
            "$file_idx": {
              "createdBy": {
                ".validate": "newData.isString()"
              },
              "fileName": {
                ".validate": "newData.isString()"
              },
              "filePath": {
                // URL Format
                // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
                ".validate": "newData.isString() && (newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
              },
              "fileSize": {
                ".validate": "newData.isNumber()"
              },
              "fileType": {
                ".validate": "newData.isString()"
              },
              "storagePath": {
                ".validate": "newData.isString()"
              },
              "uploadDate": {
                  // ISO-8601 Format
                  /* See https://devdocs.io/javascript/global_objects/date/toisostring */
                  ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
              }
            }
          },
          "pdfFiles": {
            "$file_idx": {
              "createdBy": {
                ".validate": "newData.isString()"
              },
              "fileName": {
                ".validate": "newData.isString()"
              },
              "filePath": {
                // URL Format
                // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
                ".validate": "newData.isString() && (newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
              },
              "fileSize": {
                ".validate": "newData.isNumber()"
              },
              "fileType": {
                ".validate": "newData.isString()"
              },
              "storagePath": {
                ".validate": "newData.isString()"
              },
              "uploadDate": {
                  // ISO-8601 Format
                  /* See https://devdocs.io/javascript/global_objects/date/toisostring */
                  ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
              }
            }
          },
          "textEditorFiles": {
            "$file_idx": {
              "createdBy": {
                ".validate": "newData.isString()"
              },
              "fileName": {
                ".validate": "newData.isString()"
              },
              "filePath": {
                // URL Format
                // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
                ".validate": "newData.isString() && (newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
              },
              "fileSize": {
                ".validate": "newData.isNumber()"
              },
              "fileType": {
                ".validate": "newData.isString()"
              },
              "storagePath": {
                ".validate": "newData.isString()"
              },
              "uploadDate": {
                  // ISO-8601 Format
                  /* See https://devdocs.io/javascript/global_objects/date/toisostring */
                  ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
              }
            }
          },
          "fileRequestFiles": {
            ".write": "(root.child('whiteboards').child($board_id).child('unique_url').exists() && root.child('readonly-access').child(auth.uid).child('boards').child($board_id).exists()) || root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
            "$file_id": {
              "id": {
                ".validate": "newData.isString() && newData.val() === $file_id"
              },
              "createdBy": {
                ".validate": "newData.isString()"
              },
              "fileName": {
                ".validate": "newData.isString()"
              },
              "filePath": {
                // URL Format
                // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
                ".validate": "newData.isString() && (newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
              },
              "fileSize": {
                ".validate": "newData.isNumber()"
              },
              "fileType": {
                ".validate": "newData.isString()"
              },
              "storagePath": {
                ".validate": "newData.isString()"
              },
              "uploadDate": {
                  // ISO-8601 Format
                  /* See https://devdocs.io/javascript/global_objects/date/toisostring */
                  ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
              }
            }
          },
          "fileRequestSettings": {
            "note": {
              ".validate": "newData.isString()"
            }
          },
          "header_title": {
            ".validate": "newData.isString()"
          },
          "type": {
            ".validate": "newData.isString() && newData.val().matches(/^Text|Checklist|Buttons|QAForm|Files|Conversation|PDF|Image|Spreadsheet|ScriptEmbed|Video|Iframe|Powerpoint|RSS|FileRequest|Grid$/) && (newData.val().matches(/^QAForm|ScriptEmbed$/) ? (data.exists() && data.val().matches(/^QAForm|ScriptEmbed$/)) || (auth !== null && (auth.token.isSpecial === true || auth.token.stripeRole !== null)) : true)"
          },
          "text": {
            ".validate": "newData.isString()"
          },
          "color": {
            ".validate": "newData.isString()"
          },
          "scriptEmbed": {
            ".validate": "newData.isString()"
          },
          "title": {
            ".validate": "newData.isString()"
          },
          "x": {
            ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
            ".validate": "newData.isNumber()"
          },
          "y": {
            ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
            ".validate": "newData.isNumber()"
          },
          "w": {
            ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
            ".validate": "newData.isNumber()"
          },
          "minH": {
            ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
            ".validate": "newData.isNumber()"
          },
          "h": {
            ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
            ".validate": "newData.isNumber()"
          },
          "minW": {
            ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
            ".validate": "newData.isNumber()"
          },
          "grid": {
            ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()"
          },
          "metadata" : {
            "lastModified": {
              ".write": "auth !== null && ((root.child('whiteboards').child($board_id).child('unique_url').exists() && root.child('readonly-access').child(auth.uid).child('boards').child($board_id).exists()) || root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists())",
              ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
            },
            "lastViewed": {
              ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
              "$user_id": {
                // ISO-8601 Format
                /* See https://devdocs.io/javascript/global_objects/date/toisostring */
                ".write": "$user_id === auth.token.email.replace('.', '<>')",
                ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
              }
            }
          }
        }
      }
    },
    "chats": {
      "$board_id": {
        // All chat messages are readable by every member of the Board. Each individual chat
        // message is only writable by its creator.
        ".read": "auth !== null && ((root.child('whiteboards').child($board_id).child('unique_url').exists() && root.child('readonly-access').child(auth.uid).child('boards').child($board_id).exists()) || root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists())",
        "$block_id": {
          "$chat_id": {
            ".write": "(root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()) && ((!data.exists() && newData.exists() && newData.child('sender_id').val() === auth.token.email.replace('.', '<>')) || (data.exists() && data.child('sender_id').val() === auth.token.email.replace('.', '<>')))",
            "message": {
              ".validate": "newData.isString()"
            },
            "sender_id": {
              ".validate": "newData.isString() && (!data.exists() ? newData.val() === auth.token.email.replace('.', '<>') : newData.val() === data.val())"
            },
            "sender": {
              ".validate": "newData.isString()"
            }
          }
        }
      }
    },
    "files": {
      "$user_id": {
        ".read": "$user_id === auth.token.email.replace('.', '<>')",
        ".indexOn": ["storagePath"],
        "$file_id": {
          "createdBy": {
            ".validate": "newData.isString() && newData.val() === $user_id"
          },
          "fileName": {
            ".validate": "newData.isString()"
          },
          "filePath": {
            // URL Format
            // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
            ".validate": "newData.isString() && (newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
          },
          "fileSize": {
            ".validate": "newData.isNumber()"
          },
          "fileType": {
            ".validate": "newData.isString()"
          },
          "storagePath": {
            ".validate": "newData.isString()"
          },
          "uploadDate": {
              // ISO-8601 Format
              /* See https://devdocs.io/javascript/global_objects/date/toisostring */
              ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
          },
          "usage": {}
        }
      }
    },
    "invite-emails": {
      ".read": true
    },
    "metadata": {
      "$user_id": {
        // Read access only granted to the authenticated user.
        ".read": "$user_id === auth.token.email.replace('.', '<>')",
        // Write access only via Admin SDK.
        ".write": false,
        "refreshTime": {
          ".validate": "newData.isNumber()"
        },
        "usage": {
          "boards": {
            ".validate": "newData.isNumber()"
          },
          "storage": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    "readonly-access": {
      "$uid": {
        ".read": "auth.uid === $uid",
        ".write": "auth.uid === $uid",
        "boards": {
          "$board_id": {
            ".validate": "root.child('whiteboards').child($board_id).child('unique_url').exists() && (newData.val() === root.child('whiteboards').child($board_id).child('unique_url').val())"
          }
        }
      }
    },
    "roles": {
      ".read": true,
      "$role_id": {
        "maxBoards": {
          ".validate": "newData.isNumber()"
        },
        "maxStorage": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    "users": {
      "$user_id": {
        // Profile data (name, email, picture, etc) is readable by anyone. Everything else
        // is only accessible to the user themselves.
        ".read": "$user_id === auth.token.email.replace('.', '<>')",
        ".write": "$user_id === auth.token.email.replace('.', '<>')",
        "display_name": {
          ".read": "auth !== null",
          ".validate": "newData.isString()"
        },
        "branding": {
          ".read": "auth !== null",
          "boardBodyColor": {
            ".validate": "newData.isString()"
          },
          "boardHeaderColor": {
            ".validate": "newData.isString()"
          }
        },
        "whiteboards": {
          ".indexOn": ["board_name", "date_created", "isArchived", "metadata/lastModified"],
          "$board_id": {
            // A copy of some of data found at /whiteboards/$board_id for efficient querying.
            // The backend makes sure everything in sync.
            "board_members": {},
            "board_name": {
              ".validate": "newData.isString()"
            },
            "board_header_color": {
              ".validate": "newData.isString()"
            },
            "date_created": {
              // ISO-8601 Format
              /* See https://devdocs.io/javascript/global_objects/date/toisostring */
              ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
            },
            "isBoardFrozen": {
              ".validate": "newData.isBoolean()"
            },
            "metadata": {
              ".indexOn": ["lastModified"],
              "lastModified": {
                ".write": "root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists()",
                ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
              }
            },
            "unique_url": {
              // UUID v4 Format
              // See https://github.com/uuidjs/uuid/blob/ac1b3afbf410e2dab259a1b7df0f27da919aabff/src/regex.js#L1
              ".validate": "auth !== null && (auth.token.isSpecial === true || auth.token.stripeRole.matches(/^premium|premium-plus$/)) && newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>') && newData.isString() && newData.val().length > 0 && newData.val().matches(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i)"
            },
            "friendly_url": {
              ".validate": "auth !== null && (auth.token.isSpecial === true || auth.token.stripeRole.matches(/^premium|premium-plus$/)) && newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>') && newData.isString() && newData.val().length >= 4 && newData.val().length <= 23 && (!newData.exists() || newData.val() === data.val() || !root.child('friendlyUrl').child(newData.val()).exists())"
            }
          }
        },
        "addressbook": {
          "$email_id": {
            ".validate": "newData.isString()"
          }
        }
      }
    },
    "user-chats": {
      // A lookup map of users to their chat messages. This will only ever be used by backend
      // code, so all client access is denied.
      "$user_id": {
        "$chat_id": {
          "board_id": {
            ".validate": "newData.isString()"
          },
          "block_id": {
            ".validate": "newData.isString()"
          },
          "chat_id": {
            ".validate": "newData.isString() && newData.val() === $chat_id"
          }
        }
      }
    },
    "templates" : {
      ".read" : "auth !== null",
      ".indexOn": ["board_id"],
      "$template":{
        "name" : {
          ".validate" : "newData.isString()"
        },
        "board_id" : {
          ".validate" : "newData.isString() && root.child('whiteboards').child(newData.val()).exists()"
        }
      }
    },
    "whiteboards": {
      "$board_id": {
        // Boards are only accessible to their members.
        ".read": "auth !== null && ((data.child('unique_url').exists() && root.child('readonly-access').child(auth.uid).child('boards').child($board_id).exists()) || root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists())",
        ".write": "auth !== null && ((data.exists() && !newData.exists()) ? data.child('board_members').child('0').val() === auth.token.email.replace('.', '<>') : root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists() && ((!data.exists() && newData.exists()) ? auth.token.isSpecial === true || (auth.token.stripeRole !== null && (!root.child('metadata').child(auth.token.email.replace('.', '<>')).child('usage').child('boards').exists() || root.child('metadata').child(auth.token.email.replace('.', '<>')).child('usage').child('boards').val() < root.child('roles').child(auth.token.stripeRole).child('maxBoards').val())) || (!root.child('metadata').child(auth.token.email.replace('.', '<>')).child('usage').child('boards').exists() || root.child('metadata').child(auth.token.email.replace('.', '<>')).child('usage').child('boards').val() < root.child('roles').child('free').child('maxBoards').val()) : true))",
        "board_members": {},
        "board_header_color": {
          ".validate": "newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>') && newData.isString()"
        },
        "boardBodyColor": {
          ".validate": "newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>') && newData.isString()"
        },
        "board_name": {
          ".validate": "newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>') && newData.isString()"
        },
        "currentViewingUsers": {
          "$user_id": {
            ".write": "auth !== null && ((auth.token.email !== null && $user_id === auth.token.email.replace('.', '<>')) || ((newData.parent().parent().child('unique_url').exists() && root.child('readonly-access').child(auth.uid).child('boards').child($board_id).exists()) && $user_id === 'guest-' + auth.uid))",
            "displayName": {
              ".validate": "newData.isString()"
            },
            "photoURL": {
              // URL Format
              // See https://github.com/jquense/yup/blob/eca461884f53489c11f70967c93247d124794a75/src/string.js#L9
              ".validate": "newData.isString() && (newData.val().length === 0 || newData.val().matches(/^((https?|ftps?):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(localhost|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i))"
            }
          }
        },
        "date_created": {
          // ISO-8601 Format
          /* See https://devdocs.io/javascript/global_objects/date/toisostring */
          ".validate": "newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>') && newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
        },
        "view_logs": {
          "$user_id": {
            ".write": "$user_id === auth.token.email.replace('.', '<>')",
            // ISO-8601 Format
            /* See https://devdocs.io/javascript/global_objects/date/toisostring */
            "lastModified": {
              ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
            }
          }
        },
        "metadata":{
          "lastModified": {
            ".write": "auth !== null && ((newData.parent().parent().child('unique_url').exists() && root.child('readonly-access').child(auth.uid).child('boards').child($board_id).exists()) || root.child('users').child(auth.token.email.replace('.', '<>')).child('whiteboards').child($board_id).exists())",
            ".validate": "newData.isString() && newData.val().matches(/^([-+]?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$/)"
          }
        },
        "unique_url": {
          // UUID v4 Format
          // See https://github.com/uuidjs/uuid/blob/ac1b3afbf410e2dab259a1b7df0f27da919aabff/src/regex.js#L1
          ".validate": "auth !== null && (auth.token.isSpecial === true || auth.token.stripeRole.matches(/^premium|premium-plus$/)) && newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>') && newData.isString() && newData.val().length > 0 && newData.val().matches(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i)"
        },
        "friendly_url": {
          ".validate": "auth !== null && (auth.token.isSpecial === true || auth.token.stripeRole.matches(/^premium|premium-plus$/)) && newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>') && newData.isString() && newData.val().length >= 4 && newData.val().length <= 23 && (!newData.exists() || newData.val() === data.val() || !root.child('friendlyUrl').child(newData.val()).exists())"
        },
        "loadLimit": {
          ".validate": "newData.isNumber() && (auth !== null && (data.exists() ? newData.val() === data.val() : ((auth.token.isSpecial === true && newData.val() === root.child('roles').child('special').child('maxBoardLoads').val()) || (auth.token.stripeRole !== null && newData.val() === root.child('roles').child(auth.token.stripeRole).child('maxBoardLoads').val()) || (auth.token.stripeRole === null && newData.val() === root.child('roles').child('free').child('maxBoardLoads').val()))))"
        },
        "password": {
          ".validate": "newData.isString() && newData.val().length > 0 && ((auth !== null && newData.parent().child('board_members').child('0').val() === auth.token.email.replace('.', '<>')) ? true : data.val() === newData.val())"
        }
      }
    },
    "friendlyUrl": {
      ".read": true,
      ".write": false,
      "$friendlyUrlCode": {
        "board_id": {
          ".validate": "root.child('whiteboards').child(newData.val()).child('board_members').child('0').val() === auth.token.email.replace('.', '<>')"
        },
        "friendly_url": {
          ".validate": "newData.val() === $friendlyUrlCode"
        },
        "unique_url": {
          ".validate": "newData.val() === root.child('whiteboards').child(newData.parent().child('board_id').val()).child('unique_url').val()"
        }
      }
    },
    "zapier": {
      "$user_id": {
        // Read access only granted to the authenticated user.
        ".read": "$user_id === auth.token.email.replace('.', '<>')",
        // Write access only via Admin SDK.
        ".write": false,
        "$event_type": {
          ".indexOn": ["board_id", "blockd_id", "board_id_block_id"]
        }
      }
   },
   "digest-logs": {
      "$board_id": {
        "$log_date": {
          "$log_id": {
            "action": { ".validate": "newData.isString()" },
            "createdAt": { ".validate": "true" },
            "email": { ".validate": "true" }
          }
        }
      }
   }
  }
}
